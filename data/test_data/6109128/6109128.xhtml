<?xml version="1.0"?>
<!--This file was automatically created from LaTeX source, do not manually edit!-->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:zbl="http://zentralblatt.org" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:ltx="http://dlmf.nist.gov/LaTeXML">
  <head>
    <style type="text/css">
        html{border: 0px #006699 solid;border-left-width: 15px}
        body {margin: 15px;padding: 0px;background-color:#ffffff;color:black;
              font-family:helvetica;font-size: 14px;line-height: 1.4em}
        div.volume-title {font-size:24pt;text-align:center;font-weight:bold}
        div.title {font-style:italic;font-weight:bold}
        div.mathics {font-size:larger;font-weight:bold}
        span.mathics-zbl {float:right}
        div.matverw {font-size:smaller}
        div.review {margin:5mm 5mm 5mm 5mm}
        div.aunot {font-weight:bold}
        div.published {font-weight:bold}
		.number {font-style: italic; text-align:right}
        div.reviewer{font-style:italic;text-align:right}
      </style>
    <title/>
  </head>
  <body>
    <div class="language">EN</div>
    <div class="class">68T45 68P10 68P20 68T05 68U05 68P05</div>
    <div class="keywords">binary hash codes; image search; visual search; content-based retrieval; supervised learning; unsupervised learning; spectral analysis</div>
    <div class="doctype">book article</div>
    <div class="review">
      <div class="aunot"><span class="author">Grauman, Kristen; Fergus, Rob</span> Number: <span class="number">1251.68268</span></div>
      <div class="title">Learning binary hash codes for large-scale image search.</div>
      <div class="published">2013</div>
      <div class="review-body">Summary: Algorithms to rapidly search massive image or video collections are critical for many vision applications, including visual search, content-based retrieval, and non-parametric models for object recognition. Recent work shows that learned binary projections are a powerful way to index large collections according to their content. The basic idea is to formulate the projections so as to approximately preserve a given similarity function of interest. Having done so, one can then search the data efficiently using hash tables, or by exploring the Hamming ball volume around a novel query. Both enable sub-linear time retrieval with respect to the database size. Further, depending on the design of the projections, in some cases it is possible to bound the number of database examples that must be searched in order to achieve a given level of accuracy.  This chapter overviews data structures for fast search with binary codes, and then describes several supervised and unsupervised strategies for generating the codes. In particular, we review supervised methods that integrate metric learning, boosting, and neural networks into the hash key construction, and unsupervised methods based on spectral analysis or kernelized random projections that compute affinity-preserving binary codes. Whether learning from explicit semantic supervision or exploiting the structure among unlabeled data, these methods make scalable retrieval possible for a variety of robust visual similarity measures. We focus on defining the algorithms, and illustrate the main points with results using millions of images.
</div>
      <div class="reviewer"/>
    </div>
  </body>
</html>
